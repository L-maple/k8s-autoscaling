// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: pv_monitor/pv_monitor.proto

package pv_monitor

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PVRequest) Reset() {
	*x = PVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pv_monitor_pv_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVRequest) ProtoMessage() {}

func (x *PVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pv_monitor_pv_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVRequest.ProtoReflect.Descriptor instead.
func (*PVRequest) Descriptor() ([]byte, []int) {
	return file_pv_monitor_pv_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *PVRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PvNames []string `protobuf:"bytes,1,rep,name=pvNames,proto3" json:"pvNames,omitempty"`
}

func (x *PVResponse) Reset() {
	*x = PVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pv_monitor_pv_monitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVResponse) ProtoMessage() {}

func (x *PVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pv_monitor_pv_monitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVResponse.ProtoReflect.Descriptor instead.
func (*PVResponse) Descriptor() ([]byte, []int) {
	return file_pv_monitor_pv_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *PVResponse) GetPvNames() []string {
	if x != nil {
		return x.PvNames
	}
	return nil
}

type PVInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PVDiskUtilization float32 `protobuf:"fixed32,1,opt,name=PVDiskUtilization,proto3" json:"PVDiskUtilization,omitempty"`
	PVDiskIOPS        float32 `protobuf:"fixed32,2,opt,name=PVDiskIOPS,proto3" json:"PVDiskIOPS,omitempty"`
	PVDiskWriteMBPS   float32 `protobuf:"fixed32,3,opt,name=PVDiskWriteMBPS,proto3" json:"PVDiskWriteMBPS,omitempty"`
	PVDiskReadMBPS    float32 `protobuf:"fixed32,4,opt,name=PVDiskReadMBPS,proto3" json:"PVDiskReadMBPS,omitempty"`
}

func (x *PVInfo) Reset() {
	*x = PVInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pv_monitor_pv_monitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVInfo) ProtoMessage() {}

func (x *PVInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pv_monitor_pv_monitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVInfo.ProtoReflect.Descriptor instead.
func (*PVInfo) Descriptor() ([]byte, []int) {
	return file_pv_monitor_pv_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *PVInfo) GetPVDiskUtilization() float32 {
	if x != nil {
		return x.PVDiskUtilization
	}
	return 0
}

func (x *PVInfo) GetPVDiskIOPS() float32 {
	if x != nil {
		return x.PVDiskIOPS
	}
	return 0
}

func (x *PVInfo) GetPVDiskWriteMBPS() float32 {
	if x != nil {
		return x.PVDiskWriteMBPS
	}
	return 0
}

func (x *PVInfo) GetPVDiskReadMBPS() float32 {
	if x != nil {
		return x.PVDiskReadMBPS
	}
	return 0
}

type PVInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PVInfos map[string]*PVInfo `protobuf:"bytes,1,rep,name=PVInfos,proto3" json:"PVInfos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // PVName --> PVInfo
}

func (x *PVInfosRequest) Reset() {
	*x = PVInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pv_monitor_pv_monitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVInfosRequest) ProtoMessage() {}

func (x *PVInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pv_monitor_pv_monitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVInfosRequest.ProtoReflect.Descriptor instead.
func (*PVInfosRequest) Descriptor() ([]byte, []int) {
	return file_pv_monitor_pv_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *PVInfosRequest) GetPVInfos() map[string]*PVInfo {
	if x != nil {
		return x.PVInfos
	}
	return nil
}

type PVInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PVInfosResponse) Reset() {
	*x = PVInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pv_monitor_pv_monitor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVInfosResponse) ProtoMessage() {}

func (x *PVInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pv_monitor_pv_monitor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVInfosResponse.ProtoReflect.Descriptor instead.
func (*PVInfosResponse) Descriptor() ([]byte, []int) {
	return file_pv_monitor_pv_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *PVInfosResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_pv_monitor_pv_monitor_proto protoreflect.FileDescriptor

var file_pv_monitor_pv_monitor_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x76, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x76, 0x5f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70,
	0x76, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x22, 0x1b, 0x0a, 0x09, 0x50, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x0a, 0x50, 0x56, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xa8,
	0x01, 0x0a, 0x06, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x56, 0x44,
	0x69, 0x73, 0x6b, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x50, 0x56, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x56, 0x44, 0x69, 0x73,
	0x6b, 0x49, 0x4f, 0x50, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x50, 0x56, 0x44,
	0x69, 0x73, 0x6b, 0x49, 0x4f, 0x50, 0x53, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x56, 0x44, 0x69, 0x73,
	0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x42, 0x50, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x50, 0x56, 0x44, 0x69, 0x73, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x42, 0x50,
	0x53, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x56, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x42, 0x50, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x50, 0x56, 0x44, 0x69, 0x73,
	0x6b, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x42, 0x50, 0x53, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x50, 0x56,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x07,
	0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x70, 0x76, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a,
	0x4e, 0x0a, 0x0c, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x76, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x56,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x29, 0x0a, 0x0f, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x99, 0x01, 0x0a, 0x09, 0x50,
	0x56, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x56, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x76, 0x5f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x76, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50,
	0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x76,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x76, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x38, 0x73, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x68, 0x70, 0x61, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x76, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pv_monitor_pv_monitor_proto_rawDescOnce sync.Once
	file_pv_monitor_pv_monitor_proto_rawDescData = file_pv_monitor_pv_monitor_proto_rawDesc
)

func file_pv_monitor_pv_monitor_proto_rawDescGZIP() []byte {
	file_pv_monitor_pv_monitor_proto_rawDescOnce.Do(func() {
		file_pv_monitor_pv_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_pv_monitor_pv_monitor_proto_rawDescData)
	})
	return file_pv_monitor_pv_monitor_proto_rawDescData
}

var file_pv_monitor_pv_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pv_monitor_pv_monitor_proto_goTypes = []interface{}{
	(*PVRequest)(nil),       // 0: pv_monitor.PVRequest
	(*PVResponse)(nil),      // 1: pv_monitor.PVResponse
	(*PVInfo)(nil),          // 2: pv_monitor.PVInfo
	(*PVInfosRequest)(nil),  // 3: pv_monitor.PVInfosRequest
	(*PVInfosResponse)(nil), // 4: pv_monitor.PVInfosResponse
	nil,                     // 5: pv_monitor.PVInfosRequest.PVInfosEntry
}
var file_pv_monitor_pv_monitor_proto_depIdxs = []int32{
	5, // 0: pv_monitor.PVInfosRequest.PVInfos:type_name -> pv_monitor.PVInfosRequest.PVInfosEntry
	2, // 1: pv_monitor.PVInfosRequest.PVInfosEntry.value:type_name -> pv_monitor.PVInfo
	0, // 2: pv_monitor.PVService.RequestPVNames:input_type -> pv_monitor.PVRequest
	3, // 3: pv_monitor.PVService.ReplyPVInfos:input_type -> pv_monitor.PVInfosRequest
	1, // 4: pv_monitor.PVService.RequestPVNames:output_type -> pv_monitor.PVResponse
	4, // 5: pv_monitor.PVService.ReplyPVInfos:output_type -> pv_monitor.PVInfosResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pv_monitor_pv_monitor_proto_init() }
func file_pv_monitor_pv_monitor_proto_init() {
	if File_pv_monitor_pv_monitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pv_monitor_pv_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pv_monitor_pv_monitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pv_monitor_pv_monitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pv_monitor_pv_monitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pv_monitor_pv_monitor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pv_monitor_pv_monitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pv_monitor_pv_monitor_proto_goTypes,
		DependencyIndexes: file_pv_monitor_pv_monitor_proto_depIdxs,
		MessageInfos:      file_pv_monitor_pv_monitor_proto_msgTypes,
	}.Build()
	File_pv_monitor_pv_monitor_proto = out.File
	file_pv_monitor_pv_monitor_proto_rawDesc = nil
	file_pv_monitor_pv_monitor_proto_goTypes = nil
	file_pv_monitor_pv_monitor_proto_depIdxs = nil
}
